services:
  db:
    image: postgres:16-alpine
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data


  backend:
    build: ./backend
    restart: always
    env_file: backend/.env
    ports:
      - "4000:4000"
    depends_on:
      - db
    command: sh -c "npx prisma db push && npm run start:prod"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4000/health" ]
      interval: 30s
      retries: 3
      start_period: 5s
      timeout: 5s
    volumes:
      - ./backend/uploads:/usr/src/app/uploads

  frontend:
    build: ./frontend
    restart: always
    env_file: frontend/.env
    ports:
      - "3000:3000"
    depends_on:
      - backend

  client:
    build: ./client
    restart: always
    env_file: client/.env
    ports:
      - "5000:5000"
    depends_on:
      - backend

  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    depends_on:
      - backend
  caddy:
    image: caddy:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend



volumes:
  db-data:
  caddy_data:
  caddy_config:
